# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4
trigger:
  branches:
    include:
    - refs/tags/*
    - master
  paths:
    include:
    - docs/*
    exclude:
    - docs/README.md
pr:
- master
- releases/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: build
  displayName: Build
  timeoutInMinutes: 10
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: DotNetCoreCLI@2
    displayName: Dotnet Restore
    inputs:
      command: 'restore'
      feedsToUse: 'select'
      verbosityRestore: 'Minimal'

  - task: DotNetCoreCLI@2
    displayName: Dotnet Build
    inputs:
      command: 'build'
      arguments: '-c $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    displayName: Dotnet Test
    inputs:
      command: 'test'

  - task: DotNetCoreCLI@2
    displayName: Dotnet Pack
    inputs:
      command: 'pack'
      packagesToPack: '$(Build.SourcesDirectory)/src/**/*.csproj'
      nobuild: true
      includesource: true
      versioningScheme: 'off'
      verbosityPack: 'Normal'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

- deployment: Publish
  displayName: Publish
  environment: Production
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  strategy:
    runOnce:
      deploy:
        steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            downloadType: single
            artifactName: drop
            downloadPath: '$(Pipeline.Workspace)'

        - task: NuGetCommand@2
          displayName: 'NuGet push'
          inputs:
            command: push
            packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg;!$(Pipeline.Workspace)/**/*.symbols.nupkg'
            nuGetFeedType: external
            publishFeedCredentials: 'Nuget LAG_MIIN'
            verbosityPush: Normal

